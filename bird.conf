# Configure logging
log syslog all;

# Override router ID
router id 10.171.242.216;

# This pseudo-protocol performs synchronization between BIRD's routing
# tables and the kernel. If your kernel supports multiple routing tables
# (as Linux 2.2.x does), you can run multiple instances of the kernel
# protocol and synchronize different kernel tables with different BIRD tables.
protocol kernel {
    learn;            # Learn all alien routes from the kernel
    persist;        # Don't remove routes on bird shutdown
    scan time 20;        # Scan kernel routing table every 20 seconds
    import all;
    graceful restart;
    #import none;        # Default is import all
    export all;        # Default is export none
#    kernel table 5;        # Kernel table to synchronize with (default: main)
}

# This pseudo-protocol watches all interface up/down events.
protocol device {
    scan time 10;        # Scan interfaces every 10 seconds
}


protocol direct {
  debug { states };
  interface "*"; # Exclude cali* but include everything else.
}

# Static routes (again, there can be multiple instances, so that you
# can disable/enable various groups of static routes on the fly).
protocol static static_vpn {
    route 192.168.202.0:255.255.255.0 via 10.171.242.216;
}

#BGP Configuration
template bgp bgp_template {
	multihop;
        import all;
	gateway recursive;
        export where proto = "static_vpn";
        #export all;
	next hop self;
	source address 10.171.242.216;  # The local address we use for the TCP connection
        add paths on;
        graceful restart;  # See comment in kernel section about graceful restart.

        local as 64512;
}

protocol bgp Mesh_10_171_242_201 from bgp_template {
  neighbor 10.171.242.201 as 64512;
}

protocol bgp Mesh_10_171_242_206 from bgp_template {
  neighbor 10.171.242.206 as 64512;
}

protocol bgp Mesh_10_171_242_211 from bgp_template {
  neighbor 10.171.242.211 as 64512;
}


